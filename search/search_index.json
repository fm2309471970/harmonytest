{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":""},{"location":"#arkts","title":"ArkTs","text":"<ul> <li>@ohos.util.ArrayList</li> <li>@ohos.util.Deque</li> <li>@ohos.util.LinkedList</li> <li>@ohos.util.List</li> <li>@ohos.util.Queue</li> <li>@ohos.util.Stack</li> <li> <p>@ohos.util.Vector</p> </li> <li> <p>@ohos.util.HashMap</p> </li> <li>@ohos.util.HashSet</li> <li>@ohos.util.LightWeightMap</li> <li>@ohos.util.LightWeightSet</li> <li>@ohos.util.PlainArray</li> <li>@ohos.util.TreeMap</li> <li>@ohos.util.TreeSet</li> </ul>"},{"location":"#ktolin","title":"Ktolin","text":"<ul> <li>android.ArrayList</li> <li>android.LinkedList</li> <li>android.ArrayDeque</li> <li> <p>android.Array</p> </li> <li> <p>android.HashSet</p> </li> <li>android.LinkedHashSet</li> <li>android.TreeSet</li> <li>android.HashMap</li> <li>android.LinkedHashMap</li> <li>android.TreeMap</li> <li>android.PriorityQueue</li> </ul>"},{"location":"#ios","title":"ios","text":"<ul> <li>iOS.Array</li> <li>iOS.LinkedList</li> <li>iOS.Queue</li> <li> <p>iOS.Stack</p> </li> <li> <p>iOS.Dictionary</p> </li> <li>iOS.Set</li> <li>iOS.Tree</li> </ul>"},{"location":"device/","title":"Device","text":""},{"location":"device/#deveco","title":"DevEco\u865a\u62df\u673a","text":""},{"location":"device/#huawei-phone","title":"Huawei Phone","text":"\u7c7b\u578b \u4fe1\u606f CPU cores 4 RamSize 6144MB CPU/ABI X86 Density 360dpi ScreenSize 10.8\""},{"location":"device/#android-studio","title":"Android Studio","text":""},{"location":"device/#android-phone","title":"Android Phone","text":"\u7c7b\u578b \u4fe1\u606f CPU cores 4 RamSize 6144MB CPU/ABI X86 Density 420dpi"},{"location":"device/#ios-182-22c146-sdk-ios-182-22c150-simulator-installed","title":"iOS 18.2 (22C146) SDK + iOS 18.2 (22C150) Simulator (Installed)","text":""},{"location":"device/#iphone-16-pro","title":"iPhone 16 pro","text":"\u7c7b\u578b \u4fe1\u606f CPU cores 6 RamSize 8192MB CPU/ABI ARM64 Density 460ppi ScreenSize 6.3\""},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.ArrayList/","title":"@ohos.util.ArrayList","text":""},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.ArrayList/#ohosutilarraylisthas","title":"@ohos.util.ArrayList.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09ArrayList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has(loopCount: number): string {\n  // test: ArrayList.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09ArrayList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a100000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let list = new ArrayList&lt;number&gt;();\n  for (let i = 0; i &lt; 100000; i++) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.has(500000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09ArrayList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a500000 </p> <p><pre><code>function test_has2(loopCount: number): string {\n  // test: ArrayList.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09ArrayList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a5000000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let list = new ArrayList&lt;number&gt;();\n  for (let i = 0; i &lt; 5000000; i++) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.14 ms \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.ArrayList/#ohosutilarraylistinsert","title":"@ohos.util.ArrayList.insert","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5ArrayList\u5bb9\u5668insert\u63a5\u53e3 </p> <p><pre><code>function test_insert(loopCount: number): string {\n  // test: ArrayList.insert\n  // desc: \u6d4b\u8bd5ArrayList\u5bb9\u5668insert\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let list = new ArrayList&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.insert(0, i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.ArrayList/#ohosutilarraylistadd","title":"@ohos.util.ArrayList.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5ArrayList\u5bb9\u5668add\u63a5\u53e3 </p> <p><pre><code>function test_add(loopCount: number): string {\n  // test: ArrayList.add\n  // desc: \u6d4b\u8bd5ArrayList\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let list = new ArrayList&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.add(1);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Huawei Phone 0.00014 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.ArrayList/#ohosutilarraylistremove","title":"@ohos.util.ArrayList.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 5: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09ArrayList\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a50000</p> <p><pre><code>function test_remove(loopCount: number): string {\n  // test: ArrayList.remove\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09ArrayList\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a50000\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let list = new ArrayList&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.remove(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre>  \u6d4b\u8bd5\u7528\u4f8b 6: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09ArrayList\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a50000,\u6bcf\u6b21\u90fd\u80fd\u627e\u5230 </p> <p><pre><code>function test_remove2(loopCount: number): string {\n  // test: ArrayList.remove\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09ArrayList\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cArrayList\u957f\u5ea6\u4e3a50000,\u6bcf\u6b21\u90fd\u80fd\u627e\u5230\n  const test_id = 6;\n\n  // prepare: setup objects to test\n  let list = new ArrayList&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.remove(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 5 Huawei Phone 0.0672 ms \u6d4b\u8bd5\u7528\u4f8b 6 Huawei Phone 0.01226 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.ArrayList/#ohosutilarraylistsort","title":"@ohos.util.ArrayList.sort","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 7: \u6d4b\u8bd5ArrayList\u5bb9\u5668sort\u63a5\u53e3 </p> <p><pre><code>function test_sort(loopCount: number): string {\n  // test: ArrayList.sort\n  // desc: \u6d4b\u8bd5ArrayList\u5bb9\u5668sort\u63a5\u53e3\n  const test_id = 7;\n\n  // prepare: setup objects to test\n  let list = new ArrayList&lt;number&gt;();\n  for (let i = loopCount; i &gt; 0; i--) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  list.sort((a: number, b: number) =&gt; a - b);\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 7 Huawei Phone 0.01502 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Deque/","title":"@ohos.util.Deque","text":""},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Deque/#ohosutildequeinsertfront","title":"@ohos.util.Deque.insertFront","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Deque\u5bb9\u5668insertFront\u63a5\u53e3</p> <pre><code>function test_insertFront(loopCount: number): string {\n  // test: @ohos.util.Deque.insertFront\n  // desc: \u6d4b\u8bd5Deque\u5bb9\u5668insertFront\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let deque = new Deque&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.insertFront(1);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Deque/#ohosutildequeinsertend","title":"@ohos.util.Deque.insertEnd","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Deque\u5bb9\u5668insertEnd\u63a5\u53e3</p> <pre><code>function test_insertEnd(loopCount: number): string {\n  // test: @ohos.util.Deque.insertEnd\n  // desc: \u6d4b\u8bd5Deque\u5bb9\u5668insertEnd\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let deque = new Deque&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.insertEnd(1);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.00018 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Deque/#ohosutildequehas","title":"@ohos.util.Deque.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Deque\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cDeque\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasWorst(loopCount: number): string {\n  // test: @ohos.util.Deque.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Deque\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cDeque\u957f\u5ea6\u4e3a50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let deque = new Deque&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    deque.insertEnd(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.has(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.1188 ms <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Deque\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cDeque\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasBest(loopCount: number): string {\n  // test: @ohos.util.Deque.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Deque\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cDeque\u957f\u5ea6\u4e3a50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let deque = new Deque&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    deque.insertEnd(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Deque/#ohosutildequepopfirst","title":"@ohos.util.Deque.popFirst","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 5: \u6d4b\u8bd5Deque\u5bb9\u5668popFirst\u63a5\u53e3</p> <pre><code>function test_popFirst(loopCount: number): string {\n  // test: @ohos.util.Deque.popFirst\n  // desc: \u6d4b\u8bd5Deque\u5bb9\u5668popFirst\u63a5\u53e3\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let deque = new Deque&lt;number&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.insertEnd(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.popFirst();\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 5 Huawei Phone 0.00018 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Deque/#ohosutildequepoplast","title":"@ohos.util.Deque.popLast","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 6: \u6d4b\u8bd5Deque\u5bb9\u5668popLast\u63a5\u53e3</p> <pre><code>function test_popLast(loopCount: number): string {\n  // test: @ohos.util.Deque.popLast\n  // desc: \u6d4b\u8bd5Deque\u5bb9\u5668popLast\u63a5\u53e3\n  const test_id = 6;\n\n  // prepare: setup objects to test\n  let deque = new Deque&lt;number&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.insertEnd(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    deque.popLast();\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 6 Huawei Phone 0.00018 ms <p>```</p>"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LinkedList/","title":"@ohos.util.LinkedList","text":""},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LinkedList/#ohosutillinkedlistaddfirst","title":"@ohos.util.LinkedList.addFirst","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedList\u5bb9\u5668addFirst\u63a5\u53e3</p> <pre><code>function test_addFirst(loopCount: number): string {\n  // test: @ohos.util.LinkedList.addFirst\n  // desc: \u6d4b\u8bd5LinkedList\u5bb9\u5668addFirst\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let linkedList = new LinkedList&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.addFirst(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00018 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LinkedList/#ohosutillinkedlistadd","title":"@ohos.util.LinkedList.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5LinkedList\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>function test_add(loopCount: number): string {\n  // test: @ohos.util.LinkedList.add\n  // desc: \u6d4b\u8bd5LinkedList\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let linkedList = new LinkedList&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.add(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.00016 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LinkedList/#ohosutillinkedlisthas","title":"@ohos.util.LinkedList.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09LinkedList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cLinkedList\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasWorst(loopCount: number): string {\n  // test: @ohos.util.LinkedList.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09LinkedList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cLinkedList\u957f\u5ea6\u4e3a50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let linkedList = new LinkedList&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    linkedList.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.has(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Huawei Phone 0.07972 ms <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09LinkedList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cLinkedList\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasBest(loopCount: number): string {\n  // test: @ohos.util.LinkedList.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09LinkedList\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cLinkedList\u957f\u5ea6\u4e3a50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let linkedList = new LinkedList&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    linkedList.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Huawei Phone 0.0001 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LinkedList/#ohosutillinkedlistinsert","title":"@ohos.util.LinkedList.insert","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 5: \u6d4b\u8bd5LinkedList\u5bb9\u5668insert\u63a5\u53e3</p> <pre><code>function test_insert(loopCount: number): string {\n  // test: @ohos.util.LinkedList.insert\n  // desc: \u6d4b\u8bd5LinkedList\u5bb9\u5668insert\u63a5\u53e3\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let linkedList = new LinkedList&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    linkedList.add(i);\n  }\n  const indexToInsert = 25000;\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.insert(indexToInsert, i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 5 Huawei Phone 0.0335 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LinkedList/#ohosutillinkedlistget","title":"@ohos.util.LinkedList.get","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 6: \u6d4b\u8bd5LinkedList\u5bb9\u5668get\u63a5\u53e3</p> <pre><code>function test_get(loopCount: number): string {\n  // test: @ohos.util.LinkedList.get\n  // desc: \u6d4b\u8bd5LinkedList\u5bb9\u5668get\u63a5\u53e3\n  const test_id = 6;\n\n  // prepare: setup objects to test\n  let linkedList = new LinkedList&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    linkedList.add(i);\n  }\n  const indexToGet = 25000;\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    linkedList.get(indexToGet);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 6 Huawei Phone 0.03238 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.List/","title":"@ohos.util.List","text":""},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.List/#ohosutillistadd","title":"@ohos.util.List.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5List\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>function test_add(loopCount: number) {\n  // test: @ohos.util.List.add\n  // desc: \u6d4b\u8bd5List\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let list = new List&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.add(1);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00014 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.List/#ohosutillistinsert","title":"@ohos.util.List.insert","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5List\u5bb9\u5668insert\u63a5\u53e3</p> <pre><code>function test_insert(loopCount: number) {\n  // test: @ohos.util.List.insert\n  // desc: \u6d4b\u8bd5List\u5bb9\u5668insert\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let list = new List&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.insert(0,i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return (`!${test_id}: ${averageTime} ms`);\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.03246 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.List/#ohosutillisthas","title":"@ohos.util.List.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09List\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a100000</p> <pre><code>function test_has(loopCount: number) {\n  // test: @ohos.util.List.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09List\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a100000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let list = new List&lt;number&gt;();\n  for (let i = 0; i &lt; 100000; i++) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.has(500000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return (`!${test_id}: ${averageTime} ms`);\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Huawei Phone 0.155 <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09List\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a5000000</p> <pre><code>function test_has2(loopCount: number) {\n  // test: @ohos.util.List.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09List\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a5000000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let list = new List&lt;number&gt;();\n  for (let i = 0; i &lt; 5000000; i++) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return (`!${test_id}: ${averageTime} ms`);\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Huawei Phone 0.0001 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.List/#ohosutillistremove","title":"@ohos.util.List.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 5: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09List\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_remove(loopCount: number) {\n  // test: @ohos.util.List.remove\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09List\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a50000\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let list = new List&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.remove(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return (`!${test_id}: ${averageTime} ms`);\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 5 Huawei Phone 0.08128 ms <p> \u6d4b\u8bd5\u7528\u4f8b 6: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09List\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a5000000</p> <pre><code>function test_remove2(loopCount: number) {\n  // test: @ohos.util.List.remove\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09List\u5bb9\u5668\u7684remove\u63a5\u53e3\uff0cList\u957f\u5ea6\u4e3a5000000\n  const test_id = 6;\n\n  // prepare: setup objects to test\n  let list = new List&lt;number&gt;();\n  for (let i = 0; i &lt; 5000000; i++) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    list.remove(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return (`!${test_id}: ${averageTime} ms`);\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 6 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.List/#ohosutillistsort","title":"@ohos.util.List.sort","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 7: \u6d4b\u8bd5List\u5bb9\u5668sort\u63a5\u53e3</p> <pre><code>function test_sort(loopCount: number) {\n  // test: @ohos.util.List.sort\n  // desc: \u6d4b\u8bd5List\u5bb9\u5668sort\u63a5\u53e3\n  const test_id = 7;\n\n  // prepare: setup objects to test\n  let list = new List&lt;number&gt;();\n  for (let i = loopCount; i &gt; 0; i--) {\n    list.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  list.sort((a: number, b: number) =&gt; a - b);\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return (`!${test_id}: ${averageTime} ms`);\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 7 Huawei Phone 0.03326 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Queue/","title":"@ohos.util.Queue","text":""},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Queue/#ohosutilqueueadd","title":"@ohos.util.Queue.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Queue\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>function test_add(loopCount: number): string {\n  // test: Queue.add\n  // desc: \u6d4b\u8bd5Queue\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let queue = new Queue&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    queue.add(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Queue/#ohosutilqueuepop","title":"@ohos.util.Queue.pop","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Queue\u5bb9\u5668pop\u63a5\u53e3</p> <pre><code>function test_pop(loopCount: number): string {\n  // test: Queue.pop\n  // desc: \u6d4b\u8bd5Queue\u5bb9\u5668pop\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let queue = new Queue&lt;number&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    queue.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    queue.pop();\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Queue/#ohosutilqueuegetfirst","title":"@ohos.util.Queue.getFirst","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Queue\u5bb9\u5668getFirst\u63a5\u53e3</p> <pre><code>function test_getFirst(loopCount: number): string {\n  // test: Queue.getFirst\n  // desc: \u6d4b\u8bd5Queue\u5bb9\u5668getFirst\u63a5\u53e3\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let queue = new Queue&lt;number&gt;();\n  for (let i = 0; i &lt; loopCount; i++) {\n    queue.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    queue.getFirst();\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Stack/","title":"@ohos.util.Stack","text":""},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Stack/#ohosutilstackpush","title":"@ohos.util.Stack.push","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Stack\u5bb9\u5668push\u63a5\u53e3</p> <pre><code>function test_push(loopCount: number): string {\n  // test: Stack.push\n  // desc: \u6d4b\u8bd5Stack\u5bb9\u5668push\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let stack = new Stack&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.push(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Stack/#ohosutilstackpeek","title":"@ohos.util.Stack.peek","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Stack\u5bb9\u5668peek\u63a5\u53e3</p> <pre><code>function test_peek(loopCount: number): string {\n  // test: Stack.peek\n  // desc: \u6d4b\u8bd5Stack\u5bb9\u5668peek\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let stack = new Stack&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    stack.push(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.peek();\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00012 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Stack/#ohosutilstackpop","title":"@ohos.util.Stack.pop","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Stack\u5bb9\u5668pop\u63a5\u53e3</p> <pre><code>function test_pop(loopCount: number): string {\n  // test: Stack.pop\n  // desc: \u6d4b\u8bd5Stack\u5bb9\u5668pop\u63a5\u53e3\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let stack = new Stack&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    stack.push(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.pop();\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.0001 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Stack/#ohosutilstacklocate","title":"@ohos.util.Stack.locate","text":"<p> \u5b98\u65b9API\u6587\u6863</p>"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Stack/#_1","title":"\u6700\u574f\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Stack\u5bb9\u5668locate\u63a5\u53e3\uff08\u6700\u574f\u60c5\u51b5\uff0c\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\uff09</p> <pre><code>function test_locateWorst(loopCount: number): string {\n  // test: Stack.locate\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Stack\u5bb9\u5668\u7684locate\u63a5\u53e3\uff0cStack\u957f\u5ea6\u4e3a 50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let stack = new Stack&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    stack.push(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.locate(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.0163 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Stack/#_2","title":"\u6700\u4f18\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Stack\u5bb9\u5668locate\u63a5\u53e3\uff08\u6700\u4f18\u60c5\u51b5\uff0c\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09</p> <pre><code>function test_locateBest(loopCount: number): string {\n  // test: Stack.locate\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Stack\u5bb9\u5668\u7684locate\u63a5\u53e3\uff0cStack\u957f\u5ea6\u4e3a 50000\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let stack = new Stack&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    stack.push(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    stack.locate(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.0001 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Vector/","title":"@ohos.util.Vector","text":""},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Vector/#ohosutilvectoradd","title":"@ohos.util.Vector.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Vector\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>function test_add(loopCount: number): string {\n  // test: @ohos.util.Vector.add\n  // desc: \u6d4b\u8bd5Vector\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let vector = new Vector&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    vector.add(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 [Huawei Phone] 0.0001 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Vector/#ohosutilvectorinsert","title":"@ohos.util.Vector.insert","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Vector\u5bb9\u5668insert\u63a5\u53e3</p> <pre><code>function test_insert(loopCount: number): string {\n  // test: @ohos.util.Vector.insert\n  // desc: \u6d4b\u8bd5Vector\u5bb9\u5668insert\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let vector = new Vector&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    vector.add(i);\n  }\n  const indexToInsert = 25000;\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    vector.insert(indexToInsert, i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 [Huawei Phone] 0.0141 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Vector/#ohosutilvectorhas","title":"@ohos.util.Vector.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p>"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Vector/#_1","title":"\u6700\u4f18\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Vector\u5bb9\u5668\u7684has\u63a5\u53e3</p> <pre><code>function test_hasBest(loopCount: number): string {\n  // test: @ohos.util.Vector.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e3a\u7b2c\u4e00\u4e2a\uff09Vector\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cVector\u957f\u5ea6\u4e3a 50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let vector = new Vector&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    vector.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    vector.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 [Huawei Phone] 0.00008 ms"},{"location":"arkts/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.Vector/#_2","title":"\u6700\u574f\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Vector\u5bb9\u5668\u7684has\u63a5\u53e3</p> <pre><code>function test_hasWorst(loopCount: number): string {\n  // test: @ohos.util.Vector.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5143\u7d20\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff09Vector\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cVector\u957f\u5ea6\u4e3a 50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let vector = new Vector&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    vector.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    vector.has(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 [Huawei Phone] 0.0661 ms [Huawei Phone]: ../../../device#huawei-phone ---"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashMap/","title":"@ohos.util.HashMap","text":""},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashMap/#ohosutilhashmapget","title":"@ohos.util.HashMap.get","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashMap\u5bb9\u5668get\u63a5\u53e3</p> <pre><code>function test_get(loopCount: number): string {\n  // test: @ohos.util.HashMap.get\n  // desc: \u6d4b\u8bd5HashMap\u5bb9\u5668get\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let hashMap = new HashMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    hashMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.get(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00012 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashMap/#ohosutilhashmapset","title":"@ohos.util.HashMap.set","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5HashMap\u5bb9\u5668set\u63a5\u53e3</p> <pre><code>function test_set(loopCount: number): string {\n  // test: @ohos.util.HashMap.set\n  // desc: \u6d4b\u8bd5HashMap\u5bb9\u5668set\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let hashMap = new HashMap&lt;number, string&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.set(i, `Value${i}`);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.00066 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashMap/#ohosutilhashmaphaskey","title":"@ohos.util.HashMap.hasKey","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u952e\uff09HashMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cHashMap\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasKeyBest(loopCount: number): string {\n  // test: @ohos.util.HashMap.hasKey\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u952e\uff09HashMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cHashMap\u957f\u5ea6\u4e3a50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let hashMap = new HashMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    hashMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.hasKey(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Huawei Phone 0.0001 ms <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u952e\uff09HashMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cHashMap\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasKeyWorst(loopCount: number): string {\n  // test: @ohos.util.HashMap.hasKey\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u952e\uff09HashMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cHashMap\u957f\u5ea6\u4e3a50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let hashMap = new HashMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    hashMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.hasKey(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Huawei Phone 0.00008 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashMap/#ohosutilhashmaphasvalue","title":"@ohos.util.HashMap.hasValue","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 5: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u503c\uff09HashMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cHashMap\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasValueBest(loopCount: number): string {\n  // test: @ohos.util.HashMap.hasValue\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u503c\uff09HashMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cHashMap\u957f\u5ea6\u4e3a50000\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let hashMap = new HashMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    hashMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.hasValue(`Value0`);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 5 Huawei Phone 0.00012 ms <p> \u6d4b\u8bd5\u7528\u4f8b 6: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u503c\uff09HashMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cHashMap\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasValueWorst(loopCount: number): string {\n  // test: @ohos.util.HashMap.hasValue\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u503c\uff09HashMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cHashMap\u957f\u5ea6\u4e3a50000\n  const test_id = 6;\n\n  // prepare: setup objects to test\n  let hashMap = new HashMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    hashMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashMap.hasValue(`NonExistentValue`);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.get\n\nTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 6 Huawei Phone 0.01876 ms <p>```</p>"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashSet/","title":"@ohos.util.HashSet","text":""},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashSet/#ohosutilhashsetadd","title":"@ohos.util.HashSet.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashSet\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>function test_add(loopCount: number): string {\n  // test: @ohos.util.HashSet.add\n  // desc: \u6d4b\u8bd5HashSet\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let hashSet = new HashSet&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashSet.add(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00018 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashSet/#ohosutilhashsetremove","title":"@ohos.util.HashSet.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5HashSet\u5bb9\u5668remove\u63a5\u53e3</p> <pre><code>function test_remove(loopCount: number): string {\n  // test: @ohos.util.HashSet.remove\n  // desc: \u6d4b\u8bd5HashSet\u5bb9\u5668remove\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let hashSet = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    hashSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashSet.remove(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.00012 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.HashSet/#ohosutilhashsethas","title":"@ohos.util.HashSet.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09HashSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cHashSet\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasBest(loopCount: number): string {\n  // test: @ohos.util.HashSet.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09HashSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cHashSet\u957f\u5ea6\u4e3a50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let hashSet = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    hashSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashSet.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Huawei Phone 0.00012 ms <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09HashSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cHashSet\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasWorst(loopCount: number): string {\n  // test: @ohos.util.HashSet.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09HashSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cHashSet\u957f\u5ea6\u4e3a50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let hashSet = new HashSet&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    hashSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    hashSet.has(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Huawei Phone 0.00034 ms <p>```</p>"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightMap/","title":"@ohos.util.LightWeightMap","text":""},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightMap/#ohosutillightweightmapget","title":"@ohos.util.LightWeightMap.get","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LightWeightMap\u5bb9\u5668get\u63a5\u53e3</p> <pre><code>function test_get(loopCount: number): string {\n  // test: @ohos.util.LightWeightMap.get\n  // desc: \u6d4b\u8bd5LightWeightMap\u5bb9\u5668get\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let lightWeightMap = new LightWeightMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    lightWeightMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightMap.get(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00014 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightMap/#ohosutillightweightmapset","title":"@ohos.util.LightWeightMap.set","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5LightWeightMap\u5bb9\u5668set\u63a5\u53e3</p> <pre><code>function test_set(loopCount: number): string {\n  // test: @ohos.util.LightWeightMap.set\n  // desc: \u6d4b\u8bd5LightWeightMap\u5bb9\u5668set\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let lightWeightMap = new LightWeightMap&lt;number, string&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightMap.set(i, `Value${i}`);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.00074 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightMap/#ohosutillightweightmaphaskey","title":"@ohos.util.LightWeightMap.hasKey","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u952e\uff09LightWeightMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cLightWeightMap\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasKeyBest(loopCount: number): string {\n  // test: @ohos.util.LightWeightMap.hasKey\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u952e\uff09LightWeightMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cLightWeightMap\u957f\u5ea6\u4e3a50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let lightWeightMap = new LightWeightMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    lightWeightMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightMap.hasKey(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Huawei Phone 0.0001 ms <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u952e\uff09LightWeightMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cLightWeightMap\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasKeyWorst(loopCount: number): string {\n  // test: @ohos.util.LightWeightMap.hasKey\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u952e\uff09LightWeightMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cLightWeightMap\u957f\u5ea6\u4e3a50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let lightWeightMap = new LightWeightMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    lightWeightMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightMap.hasKey(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Huawei Phone 0.00012 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightMap/#ohosutillightweightmaphasvalue","title":"@ohos.util.LightWeightMap.hasValue","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 5: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u503c\uff09LightWeightMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cLightWeightMap\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasValueBest(loopCount: number): string {\n  // test: @ohos.util.LightWeightMap.hasValue\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u503c\uff09LightWeightMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cLightWeightMap\u957f\u5ea6\u4e3a50000\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let lightWeightMap = new LightWeightMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 5000; i++) {\n    lightWeightMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightMap.hasValue(`Value0`);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 5 Huawei Phone 0.00016 ms <p> \u6d4b\u8bd5\u7528\u4f8b 6: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u503c\uff09LightWeightMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cLightWeightMap\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasValueWorst(loopCount: number): string {\n  // test: @ohos.util.LightWeightMap.hasValue\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u503c\uff09LightWeightMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cLightWeightMap\u957f\u5ea6\u4e3a50000\n  const test_id = 6;\n\n  // prepare: setup objects to test\n  let lightWeightMap = new LightWeightMap&lt;number, string&gt;();\n  for (let i = 0; i &lt; 5000; i++) {\n\n\n    lightWeightMap.set(i, `Value${i}`);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightMap.hasValue(`NonExistentValue`);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 6 Huawei Phone 0.01364 ms <p>```</p>"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightSet/","title":"@ohos.util.LightWeightSet","text":""},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightSet/#ohosutillightweightsetadd","title":"@ohos.util.LightWeightSet.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LightWeightSet\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>function test_add(loopCount: number): string {\n  // test: @ohos.util.LightWeightSet.add\n  // desc: \u6d4b\u8bd5LightWeightSet\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let lightWeightSet = new LightWeightSet&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightSet.add(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00012 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightSet/#ohosutillightweightsetremove","title":"@ohos.util.LightWeightSet.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5LightWeightSet\u5bb9\u5668remove\u63a5\u53e3</p> <pre><code>function test_remove(loopCount: number): string {\n  // test: @ohos.util.LightWeightSet.remove\n  // desc: \u6d4b\u8bd5LightWeightSet\u5bb9\u5668remove\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let lightWeightSet = new LightWeightSet&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    lightWeightSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightSet.remove(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Huawei Phone 0.0135 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.LightWeightSet/#ohosutillightweightsethas","title":"@ohos.util.LightWeightSet.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09LightWeightSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cLightWeightSet\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasBest(loopCount: number): string {\n  // test: @ohos.util.LightWeightSet.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09LightWeightSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cLightWeightSet\u957f\u5ea6\u4e3a50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let lightWeightSet = new LightWeightSet&lt;number&gt;();\n  for (let i = 0; i &lt; 5000; i++) {\n    lightWeightSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightSet.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Huawei Phone 0.00012 ms <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09LightWeightSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cLightWeightSet\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasWorst(loopCount: number): string {\n  // test: @ohos.util.LightWeightSet.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09LightWeightSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cLightWeightSet\u957f\u5ea6\u4e3a50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let lightWeightSet = new LightWeightSet&lt;number&gt;();\n  for (let i = 0; i &lt; 5000; i++) {\n    lightWeightSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    lightWeightSet.has(50000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Huawei Phone 0.0001 ms <p>```</p>"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.PlainArray/","title":"@ohos.util.PlainArray","text":""},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.PlainArray/#ohosutilplainarrayadd","title":"@ohos.util.PlainArray.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5PlainArray\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>function test_add(loopCount: number): string {\n  // test: PlainArray.add\n  // desc: \u6d4b\u8bd5PlainArray\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let plainArray = new PlainArray&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.add(i, i);  // \u8fd9\u91cc\u5047\u8bbe value \u4e0e key \u76f8\u540c\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u4fee\u6539\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Huawei Phone 0.00014 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.PlainArray/#ohosutilplainarrayget","title":"@ohos.util.PlainArray.get","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 5: \u6d4b\u8bd5PlainArray\u5bb9\u5668get\u63a5\u53e3</p> <pre><code>function test_get(loopCount: number): string {\n  // test: PlainArray.get\n  // desc: \u6d4b\u8bd5PlainArray\u5bb9\u5668get\u63a5\u53e3\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let plainArray = new PlainArray&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    plainArray.add(i, i);  // \u8fd9\u91cc\u5047\u8bbe value \u4e0e key \u76f8\u540c\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u4fee\u6539\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.get(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 5 Huawei Phone 0.00014 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.PlainArray/#ohosutilplainarrayhas","title":"@ohos.util.PlainArray.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09PlainArray\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cPlainArray\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasBest(loopCount: number): string {\n  // test: PlainArray.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09PlainArray\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cPlainArray\u957f\u5ea6\u4e3a 50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let plainArray = new PlainArray&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    plainArray.add(i, i);  // \u8fd9\u91cc\u5047\u8bbe value \u4e0e key \u76f8\u540c\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u4fee\u6539\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Huawei Phone 0.0001 ms <p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09PlainArray\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cPlainArray\u957f\u5ea6\u4e3a50000</p> <pre><code>function test_hasWorst(loopCount: number): string {\n  // test: PlainArray.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09PlainArray\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cPlainArray\u957f\u5ea6\u4e3a 50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let plainArray = new PlainArray&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    plainArray.add(i, i);  // \u8fd9\u91cc\u5047\u8bbe value \u4e0e key \u76f8\u540c\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u4fee\u6539\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.has(100000);  // \u5047\u8bbe\u4e00\u4e2a\u5927\u6982\u7387\u4e0d\u5b58\u5728\u7684\u5143\u7d20\u4f5c\u4e3a\u6700\u574f\u60c5\u51b5\u6d4b\u8bd5\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Huawei Phone 0.0001 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.PlainArray/#ohosutilplainarraygetindexofvalue","title":"@ohos.util.PlainArray.getIndexOfValue","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 6: \u6d4b\u8bd5PlainArray\u5bb9\u5668getIndexOfValue\u63a5\u53e3</p> <pre><code>function test_getIndexOfValue(loopCount: number): string {\n  // test: PlainArray.getIndexOfValue\n  // desc: \u6d4b\u8bd5PlainArray\u5bb9\u5668getIndexOfValue\u63a5\u53e3\n  const test_id = 6;\n\n  // prepare: setup objects to test\n  let plainArray = new PlainArray&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    plainArray.add(i, i);  // \u8fd9\u91cc\u5047\u8bbe value \u4e0e key \u76f8\u540c\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u4fee\u6539\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    plainArray.getIndexOfValue(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 6 Huawei Phone 0.00846 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/","title":"@ohos.util.TreeMap","text":""},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#ohosutiltreemapset","title":"@ohos.util.TreeMap.set","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668set\u63a5\u53e3</p> <pre><code>function test_set(loopCount: number): string {\n  // test: TreeMap.set\n  // desc: \u6d4b\u8bd5TreeMap\u5bb9\u5668set\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let treeMap = new TreeMap&lt;string, number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeMap.set(`key${i}`, i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 [Huawei Phone] 0.00112 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#ohosutiltreemapget","title":"@ohos.util.TreeMap.get","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668get\u63a5\u53e3</p> <pre><code>function test_get(loopCount: number): string {\n  // test: TreeMap.get\n  // desc: \u6d4b\u8bd5TreeMap\u5bb9\u5668get\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let treeMap = new TreeMap&lt;string, number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    treeMap.set(`key${i}`, i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeMap.get(`key${i}`);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 [Huawei Phone] 0.0005 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#ohosutiltreemapremove","title":"@ohos.util.TreeMap.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668remove\u63a5\u53e3</p> <pre><code>function test_remove(loopCount: number): string {\n  // test: TreeMap.remove\n  // desc: \u6d4b\u8bd5TreeMap\u5bb9\u5668remove\u63a5\u53e3\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let treeMap = new TreeMap&lt;string, number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    treeMap.set(`key${i}`, i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeMap.remove(`key${i}`);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 [Huawei Phone] 0.00046 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#ohosutiltreemaphaskey","title":"@ohos.util.TreeMap.hasKey","text":"<p> \u5b98\u65b9API\u6587\u6863</p>"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#_1","title":"\u6700\u4f18\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09TreeMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3</p> <pre><code>function test_hasKeyBest(loopCount: number): string {\n  // test: TreeMap.hasKey\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09TreeMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cTreeMap\u957f\u5ea6\u4e3a 50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let treeMap = new TreeMap&lt;string, number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    treeMap.set(`key${i}`, i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeMap.hasKey('key0');\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 [Huawei Phone] 0.00028 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#_2","title":"\u6700\u574f\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09TreeMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3</p> <pre><code>function test_hasKeyWorst(loopCount: number): string {\n  // test: TreeMap.hasKey\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09TreeMap\u5bb9\u5668\u7684hasKey\u63a5\u53e3\uff0cTreeMap\u957f\u5ea6\u4e3a 50000\n  const test_id = 5;\n\n  // prepare: setup objects to test\n  let treeMap = new TreeMap&lt;string, number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    treeMap.set(`key${i}`, i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeMap.hasKey('nonexistentKey');\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 [Huawei Phone] 0.00038 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#ohosutiltreemaphasvalue","title":"@ohos.util.TreeMap.hasValue","text":"<p> \u5b98\u65b9API\u6587\u6863</p>"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#_3","title":"\u6700\u4f18\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u503c\uff09TreeMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3</p> <pre><code>function test_hasValueBest(loopCount: number): string {\n  // test: TreeMap.hasValue\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u7684\u503c\uff09TreeMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cTreeMap\u957f\u5ea6\u4e3a 50000\n  const test_id = 6;\n\n  // prepare: setup objects to test\n  let treeMap = new TreeMap&lt;string, number&gt;();\n  for (let i = 0; i &lt; 5000; i++) {\n    treeMap.set(`key${i}`, i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeMap.hasValue(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 [Huawei Phone] 0.005 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeMap/#_4","title":"\u6700\u574f\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u503c\uff09TreeMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3</p> <pre><code>function test_hasValueWorst(loopCount: number): string {\n  // test: TreeMap.hasValue\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u503c\uff09TreeMap\u5bb9\u5668\u7684hasValue\u63a5\u53e3\uff0cTreeMap\u957f\u5ea6\u4e3a 50000\n  const test_id = 7;\n\n  // prepare: setup objects to test\n  let treeMap = new TreeMap&lt;string, number&gt;();\n  for (let i = 0; i &lt; 5000; i++) {\n    treeMap.set(`key${i}`, i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeMap.hasValue(100000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime\n\n / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 [Huawei Phone] 0.02024 ms [Huawei Phone]: ../../../device#huawei-phone ---"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeSet/","title":"@ohos.util.TreeSet","text":""},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeSet/#ohosutiltreesetadd","title":"@ohos.util.TreeSet.add","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeSet\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>function test_add(loopCount: number): string {\n  // test: TreeSet.add\n  // desc: \u6d4b\u8bd5TreeSet\u5bb9\u5668add\u63a5\u53e3\n  const test_id = 1;\n\n  // prepare: setup objects to test\n  let treeSet = new TreeSet&lt;number&gt;();\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeSet.add(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 [Huawei Phone] 0.00034 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeSet/#ohosutiltreesetremove","title":"@ohos.util.TreeSet.remove","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5TreeSet\u5bb9\u5668remove\u63a5\u53e3</p> <pre><code>function test_remove(loopCount: number): string {\n  // test: TreeSet.remove\n  // desc: \u6d4b\u8bd5TreeSet\u5bb9\u5668remove\u63a5\u53e3\n  const test_id = 2;\n\n  // prepare: setup objects to test\n  let treeSet = new TreeSet&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    treeSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeSet.remove(i);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 [Huawei Phone] 0.00034 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeSet/#ohosutiltreesethas","title":"@ohos.util.TreeSet.has","text":"<p> \u5b98\u65b9API\u6587\u6863</p>"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeSet/#_1","title":"\u6700\u4f18\u60c5\u51b5","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09TreeSet\u5bb9\u5668\u7684has\u63a5\u53e3</p> <pre><code>function test_hasBest(loopCount: number): string {\n  // test: TreeSet.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u4f18\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u5b58\u5728\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff09TreeSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cTreeSet\u957f\u5ea6\u4e3a 50000\n  const test_id = 3;\n\n  // prepare: setup objects to test\n  let treeSet = new TreeSet&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    treeSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeSet.has(0);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 [Huawei Phone] 0.00016 ms"},{"location":"arkts/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/%40ohos.util.TreeSet/#_2","title":"\u6700\u574f\u60c5\u51b5","text":"<p> \u5b98\u65b9API\u6587\u6863</p> <p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09TreeSet\u5bb9\u5668\u7684has\u63a5\u53e3</p> <pre><code>function test_hasWorst(loopCount: number): string {\n  // test: TreeSet.has\n  // desc: \u6d4b\u8bd5\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff08\u67e5\u627e\u4e0d\u5b58\u5728\u7684\u5143\u7d20\uff09TreeSet\u5bb9\u5668\u7684has\u63a5\u53e3\uff0cTreeSet\u957f\u5ea6\u4e3a 50000\n  const test_id = 4;\n\n  // prepare: setup objects to test\n  let treeSet = new TreeSet&lt;number&gt;();\n  for (let i = 0; i &lt; 50000; i++) {\n    treeSet.add(i);\n  }\n\n  // test\n  const startTime = new Date();\n  for (let i = 0; i &lt; loopCount; i++) {\n    treeSet.has(100000);\n  }\n  const endTime = new Date();\n\n  // finish\n  const executionTime = endTime.getTime() - startTime.getTime();\n  const averageTime = executionTime / loopCount;\n  return `!${test_id}: ${averageTime} ms`;\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 [Huawei Phone] 0.00026 ms [Huawei Phone]: ../../../device#huawei-phone ---"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.Array/","title":"android.Array","text":""},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.Array/#androidarray_1","title":"android.Array.\u5143\u7d20\u63d2\u5165","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: Array\u9ed8\u8ba4\u4f7f\u7528\u4e0b\u6807\u63d2\u5165\u3001\u8bbf\u95ee\u5143\u7d20\u6d4b\u8bd5Array\u7684\u6570\u636e\u63d2\u5165</p> <pre><code>private fun testArray(): Long {\n        val array = IntArray(500000)\n        return measureTimeMillis {\n            for (i in 0 until 500000) {\n                array[i] = i\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.00004 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayDeque/","title":"android.ArrayDeque","text":""},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayDeque/#androidarraydequeadd","title":"android.ArrayDeque.add","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5ArrayDeque\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>private fun testArrayDeque(): Long {\n        val deque = ArrayDeque&lt;Int&gt;()\n        return measureTimeMillis {\n            for (i in 1..500000) {\n                deque.add(i)\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.000138 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayDeque/#androidarraydequeremove","title":"android.ArrayDeque.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5ArrayDeque\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>private fun testArrayDeque(): Long {\n    val deque = ArrayDeque&lt;Int&gt;()\n    for (i in 1..500000) {\n        deque.add(i)\n    }\n    return measureTimeMillis {\n        for (i in 1..500000) {\n            deque.remove(i)\n        }\n    }\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.00001 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayDeque/#androidarraydequecontains","title":"android.ArrayDeque.contains","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5ArrayDeque\u5bb9\u5668contains\u63a5\u53e3 </p> <p><pre><code>private fun testArrayDeque(): Long {\n    val deque = ArrayDeque&lt;Int&gt;()\n    for (i in 1..500000) {\n        deque.add(i)\n    }\n    return measureTimeMillis {\n        for (i in 1..500000) {\n            deque.contains(i)\n        }\n    }\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.0969 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayDeque/#androidarraydequepeek","title":"android.ArrayDeque.peek","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5ArrayDeque\u5bb9\u5668peek\u63a5\u53e3 </p> <p><pre><code>private fun testArrayDeque(): Long {\n    val deque = ArrayDeque&lt;Int&gt;()\n    for (i in 1..500000) {\n        deque.add(i)\n    }\n    return measureTimeMillis {\n        for (i in 1..500000) {\n            deque.peek()\n        }\n    }\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Android Phone 0.000006 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayList/","title":"android.ArrayList","text":""},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayList/#androidarraylistadd","title":"android.ArrayList.add","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5ArrayList\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>private fun testArrayList(): Long {\n        val list = ArrayList&lt;Int&gt;()\n        var cnt:Int = 0\n        return measureTimeMillis {\n            for (i in 1..500000) {\n                list.add(i)\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.0002 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayList/#androidarraylistget","title":"android.ArrayList.get","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5ArrayList\u5bb9\u5668get\u63a5\u53e3 </p> <p><pre><code>private fun testArrayList(): Long {\n    val list = ArrayList&lt;Int&gt;()\n    var cnt:Int = 0\n    for (i in 1..500000) {\n        list.add(i)\n    }\n    return measureTimeMillis {\n        for (i in 1..500000) {\n            cnt = list.get(i)\n        }\n    }\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.000006 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.ArrayList/#androidarraylistindexof","title":"android.ArrayList.indexOf","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5ArrayList\u5bb9\u5668indexOf\u63a5\u53e3 </p> <p><pre><code>private fun testArrayList(): Long {\n    val list = ArrayList&lt;Int&gt;()\n    var cnt:Int = 0\n    for (i in 1..500000) {\n        list.add(i)\n    }\n    return measureTimeMillis {\n        for (i in 1..500000) {\n            cnt = list.indexOf(i)\n        }\n    }\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.000142 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedList/","title":"android.LinkedList","text":""},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedList/#androidlinkedlistadd","title":"android.LinkedList.add","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedList\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>private fun testLinkedList(): Long {\n        val list = LinkedList&lt;Int&gt;()\n        var cnt:Int = 0\n        return measureTimeMillis {\n            for (i in 1..500000) {\n                list.add(i)\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.00014 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedList/#androidlinkedlistremove","title":"android.LinkedList.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5LinkedList\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>private fun testLinkedList(): Long {\n    val list = LinkedList&lt;Int&gt;()\n    var cnt:Int = 0\n    for (i in 1..500000) {\n        list.add(i)\n    }\n    return measureTimeMillis {\n        for (i in 1..500000) {\n            list.remove(i)\n        }\n    }\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.000196 ms"},{"location":"kotlin/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedList/#androidlinkedlistget","title":"android.LinkedList.get","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5LinkedList\u5bb9\u5668get\u63a5\u53e3 </p> <p><pre><code>private fun testLinkedList(): Long {\n    val list = LinkedList&lt;Int&gt;()\n    var cnt:Int = 0\n    for (i in 1..500000) {\n        list.add(i)\n    }\n    return measureTimeMillis {\n        for (i in 1..500000) {\n            list.get(i)\n        }\n    }\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.00001 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.HashMap/","title":"android.HashMap","text":""},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.HashMap/#androidhashmapput","title":"android.HashMap.put","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashMap\u5bb9\u5668put\u63a5\u53e3</p> <pre><code>private fun testHashMap(): Long {\n        val map = HashMap&lt;Int, String&gt;()\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map[i] = \"Value $i\"\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.000668 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.HashMap/#androidhashmapremove","title":"android.HashMap.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5HashMap\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>private fun testHashMap(): Long {\n        val map = HashMap&lt;Int, String&gt;()\n        for (i in 1..50000) {\n            map[i] = \"Value $i\"\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map.remove(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.000238 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.HashMap/#androidhashmapget","title":"android.HashMap.get","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5HashMap\u5bb9\u5668get\u63a5\u53e3 </p> <p><pre><code>private fun testHashMap(): Long {\n        val map = HashMap&lt;Int, String&gt;()\n        for (i in 1..50000) {\n            map[i] = \"Value $i\"\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map.get(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.0002 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.HashSet/","title":"android.HashSet","text":""},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.HashSet/#androidhashsetadd","title":"android.HashSet.add","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5HashSet\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>private fun testHashSet(): Long {\n        val set = HashSet&lt;Int&gt;()\n        return measureTimeMillis {\n            for (i in 1..500000) {\n                set.add(i)\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.000176 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.HashSet/#androidhashsetremove","title":"android.HashSet.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5HashSet\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>private fun testHashSet(): Long {\n        val set = HashSet&lt;Int&gt;()\n        for (i in 1..50000) {\n            set.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                set.remove(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.000208 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.HashSet/#androidhashsetcontains","title":"android.HashSet.contains","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5HashSet\u5bb9\u5668contains\u63a5\u53e3 </p> <p><pre><code>private fun testHashSet(): Long {\n        val set = HashSet&lt;Int&gt;()\n        for (i in 1..50000) {\n            set.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                set.contains(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.0002 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedHashMap/","title":"android.LinkedHashMap","text":""},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedHashMap/#androidlinkedhashmapput","title":"android.LinkedHashMap.put","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedHashMap\u5bb9\u5668put\u63a5\u53e3</p> <pre><code>private fun testLinkedHashMap(): Long {\n        val map = LinkedHashMap&lt;Int, String&gt;()\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map[i] = \"Value $i\"\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.000704 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedHashMap/#androidlinkedhashmapremove","title":"android.LinkedHashMap.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5LinkedHashMap\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>private fun testLinkedHashMap(): Long {\n        val map = LinkedHashMap&lt;Int, String&gt;()\n        for (i in 1..50000) {\n            map[i] = \"Value $i\"\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map.remove(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.000212 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedHashMap/#androidlinkedhashmapget","title":"android.LinkedHashMap.get","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5LinkedHashMap\u5bb9\u5668get\u63a5\u53e3 </p> <p><pre><code>private fun testLinkedHashMap(): Long {\n        val map = LinkedHashMap&lt;Int, String&gt;()\n        for (i in 1..50000) {\n            map[i] = \"Value $i\"\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map.get(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.00018 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedHashSet/","title":"android.LinkedHashSet","text":""},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedHashSet/#androidlinkedhashsetadd","title":"android.LinkedHashSet.add","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedHashSet\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>private fun testLinkedHashSet(): Long {\n        val set = LinkedHashSet&lt;Int&gt;()\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                set.add(i)\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.000186 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedHashSet/#androidlinkedhashsetremove","title":"android.LinkedHashSet.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5LinkedHashSet\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>private fun testLinkedHashSet(): Long {\n        val set = LinkedHashSet&lt;Int&gt;()\n        for (i in 1..50000) {\n            set.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                set.remove(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.000202 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.LinkedHashSet/#androidlinkedhashsetcontains","title":"android.LinkedHashSet.contains","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5LinkedHashSet\u5bb9\u5668contains\u63a5\u53e3 </p> <p><pre><code>private fun testLinkedHashSet(): Long {\n        val set = LinkedHashSet&lt;Int&gt;()\n        for (i in 1..50000) {\n            set.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                set.contains(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.00022 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.PriorityQueue/","title":"android.PriorityQueue","text":""},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.PriorityQueue/#androidpriorityqueueadd","title":"android.PriorityQueue.add","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5PriorityQueue\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>private fun testPriorityQueue(): Long {\n        val queue = PriorityQueue&lt;Int&gt;()\n        return measureTimeMillis {\n            for (i in 1..500000) {\n                queue.add(i)\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.000156 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.PriorityQueue/#androidpriorityqueuepoll","title":"android.PriorityQueue.poll","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5PriorityQueue\u5bb9\u5668poll\u63a5\u53e3 </p> <p><pre><code>private fun testPriorityQueue(): Long {\n        val queue = PriorityQueue&lt;Int&gt;()\n        for (i in 1..500000) {\n            queue.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..500000) {\n                queue.poll()\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.000248 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.PriorityQueue/#androidpriorityqueuecontains","title":"android.PriorityQueue.contains","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5PriorityQueue\u5bb9\u5668contains\u63a5\u53e3 </p> <p><pre><code>private fun testPriorityQueue(): Long {\n        val queue = PriorityQueue&lt;Int&gt;()\n        for (i in 1..500000) {\n            queue.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..500000) {\n                queue.contains(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.08822 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.PriorityQueue/#androidpriorityqueuepeek","title":"android.PriorityQueue.peek","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5PriorityQueue\u5bb9\u5668peek\u63a5\u53e3 </p> <p><pre><code>private fun testPriorityQueue(): Long {\n        val queue = PriorityQueue&lt;Int&gt;()\n        for (i in 1..500000) {\n            queue.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..500000) {\n                queue.peek()\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 Android Phone 0.000002 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.TreeMap/","title":"android.TreeMap","text":""},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.TreeMap/#androidtreemapput","title":"android.TreeMap.put","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeMap\u5bb9\u5668put\u63a5\u53e3</p> <pre><code>private fun testTreeMap(): Long {\n        val map = TreeMap&lt;Int, String&gt;()\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map[i] = \"Value $i\"\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.000932 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.TreeMap/#androidtreemapremove","title":"android.TreeMap.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5TreeMap\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>private fun testTreeMap(): Long {\n        val map = TreeMap&lt;Int, String&gt;()\n        for (i in 1..50000) {\n            map[i] = \"Value $i\"\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map.remove(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.00037 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.TreeMap/#androidtreemapget","title":"android.TreeMap.get","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5TreeMap\u5bb9\u5668get\u63a5\u53e3 </p> <p><pre><code>private fun testTreeMap(): Long {\n        val map = TreeMap&lt;Int, String&gt;()\n        for (i in 1..50000) {\n            map[i] = \"Value $i\"\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                map.get(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.00028 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.TreeSet/","title":"android.TreeSet","text":""},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.TreeSet/#androidtreesetadd","title":"android.TreeSet.add","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5TreeSet\u5bb9\u5668add\u63a5\u53e3</p> <pre><code>private fun testTreeSet(): Long {\n        val set = TreeSet&lt;Int&gt;()\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                set.add(i)\n            }\n        }\n    }\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 Android Phone 0.000394 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.TreeSet/#androidtreesetremove","title":"android.TreeSet.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5TreeSet\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>private fun testTreeSet(): Long {\n        val set = TreeSet&lt;Int&gt;()\n        for (i in 1..50000) {\n            set.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                set.remove(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 Android Phone 0.00033 ms"},{"location":"kotlin/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/android.TreeSet/#androidtreesetcontains","title":"android.TreeSet.contains","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5TreeSet\u5bb9\u5668contains\u63a5\u53e3 </p> <p><pre><code>private fun testTreeSet(): Long {\n        val set = TreeSet&lt;Int&gt;()\n        for (i in 1..50000) {\n            set.add(i)\n        }\n        return measureTimeMillis {\n            for (i in 1..50000) {\n                set.contains(i)\n            }\n        }\n    }\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 Android Phone 0.00034 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Array/","title":"iOS.Array","text":""},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Array/#iosarrayappend","title":"iOS.Array.append","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Array\u5bb9\u5668append\u63a5\u53e3</p> <pre><code>func testArrayOperations() {\n        var results: [TestResults] = []\n        var array = Array(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { array.append(1) })\n        }\n        let result = TestResults(\n            containerType: Array,\n            operation: append,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 iPhone 16 pro 0.000113 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Array/#iosarrayinsert","title":"iOS.Array.insert","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Array\u5bb9\u5668insert\u63a5\u53e3 </p> <p><pre><code>func testArrayOperations() {\n        var results: [TestResults] = []\n        var array = Array(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { array.insert(1, at: 0) })\n        }\n        let result = TestResults(\n            containerType: Array,\n            operation: insert,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 iPhone 16 pro 0.000583 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Array/#iosarrayremove","title":"iOS.Array.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5Array\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>func testArrayOperations() {\n        var results: [TestResults] = []\n        var array = Array(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { array.remove(at: 0) })\n        }\n        let result = TestResults(\n            containerType: Array,\n            operation: remove,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 iPhone 16 pro 0.000402 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Array/#iosarraycontains","title":"iOS.Array.contains","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5Array\u5bb9\u5668contains\u63a5\u53e3 </p> <p><pre><code>func testArrayOperations() {\n        var results: [TestResults] = []\n        var array = Array(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = array.contains(500) })\n        }\n        let result = TestResults(\n            containerType: Array,\n            operation: contains,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 iPhone 16 pro 0.000082 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Array/#iosarraymap","title":"iOS.Array.map","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 5: \u6d4b\u8bd5Array\u5bb9\u5668map\u63a5\u53e3 </p> <p><pre><code>func testArrayOperations() {\n        var results: [TestResults] = []\n        var array = Array(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = array.map { $0 * 2 } })\n        }\n        let result = TestResults(\n            containerType: Array,\n            operation: map,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 5 iPhone 16 pro 0.087130 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Array/#iosarrayfilter","title":"iOS.Array.filter","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 6: \u6d4b\u8bd5Array\u5bb9\u5668filter\u63a5\u53e3 </p> <p><pre><code>func testArrayOperations() {\n        var results: [TestResults] = []\n        var array = Array(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = array.filter { $0 % 2 == 0 } })\n        }\n        let result = TestResults(\n            containerType: Array,\n            operation: filter,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 6 iPhone 16 pro 0.091443 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Array/#iosarrayreduce","title":"iOS.Array.reduce","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 7: \u6d4b\u8bd5Array\u5bb9\u5668reduce\u63a5\u53e3 </p> <p><pre><code>func testArrayOperations() {\n        var results: [TestResults] = []\n        var array = Array(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = array.reduce(0, +) })\n        }\n        let result = TestResults(\n            containerType: Array,\n            operation: reduce,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 7 iPhone 16 pro 0.082307 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.LinkedList/","title":"iOS.LinkedList","text":""},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.LinkedList/#ioslinkedlistappend","title":"iOS.LinkedList.append","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5LinkedList\u5bb9\u5668append\u63a5\u53e3</p> <pre><code>func testLinkedListOperations() {\n        var results: [TestResults] = []\n        var LinkedList = LinkedList(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { LinkedList.append(1) })\n        }\n        let result = TestResults(\n            containerType: LinkedList,\n            operation: append,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 iPhone 16 pro 0.000262 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.LinkedList/#ioslinkedlistinsert","title":"iOS.LinkedList.insert","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5LinkedList\u5bb9\u5668insert\u63a5\u53e3 </p> <p><pre><code>func testLinkedListOperations() {\n        var results: [TestResults] = []\n        var LinkedList = LinkedList(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { linkedList.insert(at: 0, value: 1) })\n        }\n        let result = TestResults(\n            containerType: LinkedList,\n            operation: insert,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 iPhone 16 pro 0.000475 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.LinkedList/#ioslinkedlistremove","title":"iOS.LinkedList.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5LinkedList\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>func testLinkedListOperations() {\n        var results: [TestResults] = []\n        var LinkedList = LinkedList(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { LinkedList.remove(at: 0) })\n        }\n        let result = TestResults(\n            containerType: LinkedList,\n            operation: remove,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 iPhone 16 pro 0.000124 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Queue/","title":"iOS.Queue","text":""},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Queue/#iosqueueenqueue","title":"iOS.Queue.enqueue","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Queue\u5bb9\u5668enqueue\u63a5\u53e3</p> <pre><code>func testQueueOperations() {\n        var results: [TestResults] = []\n        var Queue = Queue(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { queue.enqueue(1) })\n        }\n        let result = TestResults(\n            containerType: Queue,\n            operation: enqueue,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 iPhone 16 pro 0.000150 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Queue/#iosqueuedequeue","title":"iOS.Queue.dequeue","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Queue\u5bb9\u5668dequeue\u63a5\u53e3 </p> <p><pre><code>func testQueueOperations() {\n        var results: [TestResults] = []\n        var Queue = Queue(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = queue.dequeue() })\n        }\n        let result = TestResults(\n            containerType: Queue,\n            operation: dequeue,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 iPhone 16 pro 0.000631 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Queue/#iosqueuepeek","title":"iOS.Queue.peek","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5Queue\u5bb9\u5668peek\u63a5\u53e3 </p> <p><pre><code>func testQueueOperations() {\n        var results: [TestResults] = []\n        var Queue = Queue(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = queue.peek() })\n        }\n        let result = TestResults(\n            containerType: Queue,\n            operation: peek,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 iPhone 16 pro 0.000167 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Stack/","title":"iOS.Stack","text":""},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Stack/#iosstackpush","title":"iOS.Stack.push","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Stack\u5bb9\u5668push\u63a5\u53e3</p> <pre><code>func testStackOperations() {\n        var results: [TestResults] = []\n        var Stack = Stack(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { stack.push(1) })\n        }\n        let result = TestResults(\n            containerType: Stack,\n            operation: push,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 iPhone 16 pro 0.000865 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Stack/#iosstackpop","title":"iOS.Stack.pop","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Stack\u5bb9\u5668pop\u63a5\u53e3 </p> <p><pre><code>func testStackOperations() {\n        var results: [TestResults] = []\n        var Stack = Stack(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = stack.pop() })\n        }\n        let result = TestResults(\n            containerType: Stack,\n            operation: pop,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 iPhone 16 pro 0.000994 ms"},{"location":"swift/%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Stack/#iosstackpeek","title":"iOS.Stack.peek","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5Stack\u5bb9\u5668peek\u63a5\u53e3 </p> <p><pre><code>func testStackOperations() {\n        var results: [TestResults] = []\n        var Stack = Stack(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = stack.peek() })\n        }\n        let result = TestResults(\n            containerType: Stack,\n            operation: peek,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 iPhone 16 pro 0.000191 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Dictionary/","title":"iOS.Dictionary","text":""},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Dictionary/#iosdictionaryinsert","title":"iOS.Dictionary.insert","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Dictionary\u5bb9\u5668insert\u63a5\u53e3</p> <pre><code>func testDictionaryOperations() {\n        var results: [TestResults] = []\n        var Dictionary = Dictionary(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { dict[1] = \"value\" })\n        }\n        let result = TestResults(\n            containerType: Dictionary,\n            operation: insert,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 iPhone 16 pro 0.000159 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Dictionary/#iosdictionaryupdate","title":"iOS.Dictionary.update","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Dictionary\u5bb9\u5668update\u63a5\u53e3 </p> <p><pre><code>func testDictionaryOperations() {\n        var results: [TestResults] = []\n        var Dictionary = Dictionary(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { dict[1] = \"newValue\" })\n        }\n        let result = TestResults(\n            containerType: Dictionary,\n            operation: update,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 iPhone 16 pro 0.000122 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Dictionary/#iosdictionaryremove","title":"iOS.Dictionary.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5Dictionary\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>func testDictionaryOperations() {\n        var results: [TestResults] = []\n        var Dictionary = Dictionary(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { dict.removeValue(forKey: 1) })\n        }\n        let result = TestResults(\n            containerType: Dictionary,\n            operation: remove,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 iPhone 16 pro 0.000097 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Dictionary/#iosdictionarycontains","title":"iOS.Dictionary.contains","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 4: \u6d4b\u8bd5Dictionary\u5bb9\u5668contains\u63a5\u53e3 </p> <p><pre><code>func testDictionaryOperations() {\n        var results: [TestResults] = []\n        var Dictionary = Dictionary(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = dict.keys.contains(1) })\n        }\n        let result = TestResults(\n            containerType: Dictionary,\n            operation: contains,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 4 iPhone 16 pro 0.000092 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Set/","title":"iOS.Set","text":""},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Set/#iossetinsert","title":"iOS.Set.insert","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Set\u5bb9\u5668insert\u63a5\u53e3</p> <pre><code>func testSetOperations() {\n        var results: [TestResults] = []\n        var Set = Set(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { set.insert(1) })\n        }\n        let result = TestResults(\n            containerType: Set,\n            operation: insert,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 iPhone 16 pro 0.000083 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Set/#iossetremove","title":"iOS.Set.remove","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Set\u5bb9\u5668remove\u63a5\u53e3 </p> <p><pre><code>func testSetOperations() {\n        var results: [TestResults] = []\n        var Set = Set(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { set.remove(1) })\n        }\n        let result = TestResults(\n            containerType: Set,\n            operation: remove,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 iPhone 16 pro 0.000072 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Set/#iossetcontains","title":"iOS.Set.contains","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5Set\u5bb9\u5668contains\u63a5\u53e3 </p> <p><pre><code>func testSetOperations() {\n        var results: [TestResults] = []\n        var Set = Set(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = set.contains(1) })\n        }\n        let result = TestResults(\n            containerType: Set,\n            operation: contains,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 iPhone 16 pro 0.000063 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Tree/","title":"iOS.Tree","text":""},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Tree/#iostreeinsert","title":"iOS.Tree.insert","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 1: \u6d4b\u8bd5Tree\u5bb9\u5668insert\u63a5\u53e3</p> <pre><code>func testTreeOperations() {\n        var results: [TestResults] = []\n        var Tree = Tree(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { tree.insert(50) })\n        }\n        let result = TestResults(\n            containerType: Tree,\n            operation: insert,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre> <p> \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 1 iPhone 16 pro 0.020476 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Tree/#iostreesearch","title":"iOS.Tree.search","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 2: \u6d4b\u8bd5Tree\u5bb9\u5668search\u63a5\u53e3 </p> <p><pre><code>func testTreeOperations() {\n        var results: [TestResults] = []\n        var Tree = Tree(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { _ = tree.search(50) })\n        }\n        let result = TestResults(\n            containerType: Tree,\n            operation: search,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 2 iPhone 16 pro 0.000091 ms"},{"location":"swift/%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%AE%B9%E5%99%A8/iOS.Tree/#iostreedelete","title":"iOS.Tree.delete","text":"<p> \u6d4b\u8bd5\u7528\u4f8b 3: \u6d4b\u8bd5Tree\u5bb9\u5668delete\u63a5\u53e3 </p> <p><pre><code>func testTreeOperations() {\n        var results: [TestResults] = []\n        var Tree = Tree(0..&lt;1000)\n\n        var times: [Double] = []\n        for _ in 0..&lt;500 {\n            times.append(measureTime { tree.delete(50) })\n        }\n        let result = TestResults(\n            containerType: Tree,\n            operation: delete,\n            averageTime: times.reduce(0, +) / Double(times.count),\n            fastestTime: times.min() ?? 0,\n            slowestTime: times.max() ?? 0\n        )\n}\n</code></pre>  \u6d4b\u8bd5\u7ed3\u679c</p> \u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u5e73\u53f0 \u8fd0\u884c\u65f6\u95f4 \u6d4b\u8bd5\u7528\u4f8b 3 iPhone 16 pro 0.000265 ms"}]}